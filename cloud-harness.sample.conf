[AzureConfig]
default_subscription_id = 00000000-0000-0000-0000-00000000000		; Microsoft Azure subscription ID
default_certificate_path = MyAzureManagementCertificate.pem			; Microsoft Azure management certificate (https://msdn.microsoft.com/en-us/library/azure/gg551722.aspx)
#default_storage_account = MyCustomScriptsBlobStorageAccount		; default blob storage account
#default_storage_container = CustomScriptsContainer					; default container in the blob storage account

[LinuxConfiguration]
default_certificate = MyServiceCertificate.cer|pfx					; PKCS #12 archive (.pfx|p12) or DER encoded X.509 (.cer) certificate containing public key for SSH authentication (https://azure.microsoft.com/en-gb/documentation/articles/virtual-machines-linux-use-ssh-key/)
default_linux_custom_data_file = linux_custom_data.dat				; custom shell script to be executed during bootstrapping by bootstrap.sh

[WindowsConfiguration]
default_windows_custom_data_file = windows_custom_data.dat			; custom PowerShell script to be executed during bootstrapping by bootstrap.ps1

[ChefClient]
#default_chef_server_url = https://chef-server/organizations/myorg	; chef-server URL
#default_chef_validation_client_name = myorg-validator				; Chef validation client name
#default_chef_validation_key_file = myorg-validator.pem				; Chef validation client key
default_chef_autoupdate_client = true								; enable automatic updates of chef-client
default_chef_delete_config = false									; delete existing chef-client configuration
default_chef_verify_api_cert = false								; disable verification of self-signed SSL certificates on chef-server
default_chef_ssl_verify_mode = :verify_none
default_chef_run_list = 											; chef-client run list

[CustomScriptExtensionForWindows]
default_windows_customscript_name = bootstrap.ps1					; PowerShell script name on Azure blob storage to execute by CustomScriptExtensionForWindows

[CustomScriptExtensionForLinux]
default_linux_customscript_name = bootstrap.sh						; shell script name on Azure blob storage to execute by CustomScriptExtensionForLinux

[OSPatchingExtensionForLinux]
default_patching_healthy_test_script = 								; shell script to test if the VM is healthy after patching
default_patching_idle_test_script = 								; shell script to test if the VM is idle prior to patching

[DefaultEndpointACL]
#My subnet description = ip/mask									; subnets to allow access to the VM, one 'description = subnet/mask' pair per line, as many as necessary
#My other subnet description = ip/mask
